name: CI

on:
  # Build the merge result for any PR that targets main
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review]

  # Also build when you push to ci-cd (useful pre-PR)
  push:
    branches: [ "ci-cd" ]

  # Manual run
  workflow_dispatch:

concurrency:
  group: verify-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # run on PRs to main, pushes to ci-cd, or manual
    if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: self-hosted

    env:
      LOG_DIR: /srv/ci-logs/meta-bbb
      LOG_FILE: /srv/ci-logs/meta-bbb/${{ github.run_id }}-${{ github.run_attempt }}.log

    steps:
      # For pull_request events, checkout@v4 fetches the PR's merge commit by default.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure log dir exists
        run: mkdir -p "$LOG_DIR"

      - name: Context
        run: |
          echo "event: ${{ github.event_name }}"
          echo "ref:   ${{ github.ref }}"
          echo "base:  ${{ github.base_ref }}"
          echo "head:  ${{ github.head_ref }}"

      - name: Write to host log (and console)
        shell: bash
        run: |
          {
            echo "==== $(date -Is) ===="
            echo "Repo: ${{ github.repository }}"
            echo "Commit: ${{ github.sha }}"
            echo "Runner: $RUNNER_NAME ($RUNNER_OS/$RUNNER_ARCH) on $(hostname)"
            echo "----- your step output -----"
            echo "Hello, world!"
            echo "Add other actions to build, test, and deploy your project."
            echo
          } | tee -a "$LOG_FILE"
          echo "Wrote log to: $LOG_FILE"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: host-logs
          path: ${{ env.LOG_FILE }}
          if-no-files-found: ignore
